{{define "ins"}}
    {{- $l := len $ -}}

    {{- range $i, $in := $ -}}
        x{{$i}} {{$in.Type}}{{if lt $i (subtract $l 1)}}, {{end}}
    {{- end -}}
{{end}}

{{define "pass"}}
    {{- $l := len $.Ins -}}
    {{- $isVariadic := $.IsVariadic -}}

    {{- range $i, $in := $.Ins -}}
        x{{$i}}{{if lt $i (subtract $l 1)}}, {{else if $isVariadic}}...{{end}}
    {{- end -}}
{{end}}

// Code generated by ./gen. DO NOT EDIT.

package wrapper

import (
	"context"

	"xorm.io/xorm"
	"xorm.io/xorm/contexts"
)

type session struct {
	*xorm.Session
}

{{range $}}
    {{$l := len .Ins}}
    {{$isVariadic := .IsVariadic}}

    // {{.Name}} overrides (*xorm.Session).{{.Name}} method.
    func (s *session) {{.Name}}({{template "ins" .Ins}}) *Session {
	    s.Session.{{.Name}}({{template "pass" .}})
	    return &Session{s}
    }
{{end}}
